[{"path":"index.html","id":"引言","chapter":"1 引言","heading":"1 引言","text":"本教程简单介绍网络分析（network analysis）的一些基本方法及其在R语言中的应用。教程将首先从网络（network）或图（graph，和网络在这个教程中是一个意思）开始，简单介绍一些网络和图论的相关概念、心理学常用的网络分析方法（网络估计、网络的描述、网络分析的稳健性等）以及igraph、qgraph、NetworkToolbox等网络分析常用R包和相关操作。网络分析是心理学和社会科学研究中的一种常见的方法。在网络分析中，各种变量（心理特质、症状、因素、社会个体等等）被视为网络中的结点（node或者vertex），这些结点之间的直接联系使用边（edge）来表示。通过分析由这些结点和边构成的网络，我们能够得到一些新的发现。例如，在临床心理学领域，心理障碍是往往由由症状之间的相互作用导致的，而网络分析可以帮助我们理解这个由症状形成的网络。由于本人的研究领域关注临床心理学，因此本教程中的相关介绍也主要是在这一领域的研究中经常使用的方法，而一些其他研究领域中常用的网络分析方法（如社交网络）可能并不在介绍范围内。在本教程中会使用如下的R包，在开始之前请提前安装。另外，本教程默认读者有一定R语言编程基础，在开始教程之前请先了解一下R语言的一些基础语法和分析操作。关于心理学中的网络分析（特别是临床心理学领域）方法与进展，可以阅读以下的一些材料：蔡玉清, 董书阳, 袁帅 & 胡传鹏. (2020). 变量间的网络分析模型及其应用. 心理科学进展, (01), 178-195. https://doi.org/10.3724/SP.J.1042.2020.00178蔡玉清, 董书阳, 袁帅 & 胡传鹏. (2020). 变量间的网络分析模型及其应用. 心理科学进展, (01), 178-195. https://doi.org/10.3724/SP.J.1042.2020.00178Borsboom, D., Deserno, M. K., Rhemtulla, M., Epskamp, S., Fried, E. ., McNally, R. J., Robinaugh, D. J., Perugini, M., Dalege, J., Costantini, G., Isvoranu, .-M., Wysocki, . C., van Borkulo, C. D., van Bork, R., & Waldorp, L. J. (2021). Network analysis multivariate data psychological science. Nature Reviews Methods Primers, 1(1), 1–18. https://doi.org/10.1038/s43586-021-00055-wBorsboom, D., Deserno, M. K., Rhemtulla, M., Epskamp, S., Fried, E. ., McNally, R. J., Robinaugh, D. J., Perugini, M., Dalege, J., Costantini, G., Isvoranu, .-M., Wysocki, . C., van Borkulo, C. D., van Bork, R., & Waldorp, L. J. (2021). Network analysis multivariate data psychological science. Nature Reviews Methods Primers, 1(1), 1–18. https://doi.org/10.1038/s43586-021-00055-wBorsboom, D., & Cramer, . O. J. (2013). Network Analysis: Integrative Approach Structure Psychopathology. Annual Review Clinical Psychology, 9(1), 91–121. https://doi.org/10.1146/annurev-clinpsy-050212-185608Borsboom, D., & Cramer, . O. J. (2013). Network Analysis: Integrative Approach Structure Psychopathology. Annual Review Clinical Psychology, 9(1), 91–121. https://doi.org/10.1146/annurev-clinpsy-050212-185608Fried, E. ., van Borkulo, C. D., Cramer, . O. J., Boschloo, L., Schoevers, R. ., & Borsboom, D. (2017). Mental disorders networks problems: review recent insights. Social Psychiatry Psychiatric Epidemiology, 52(1), 1–10. https://doi.org/10.1007/s00127-016-1319-zFried, E. ., van Borkulo, C. D., Cramer, . O. J., Boschloo, L., Schoevers, R. ., & Borsboom, D. (2017). Mental disorders networks problems: review recent insights. Social Psychiatry Psychiatric Epidemiology, 52(1), 1–10. https://doi.org/10.1007/s00127-016-1319-zIsvoranu, .-M., Epskamp, S., Waldorp, L., & Borsboom, D. (Eds.). (2022). Network Psychometrics R: Guide Behavioral Social Scientists (1st ed.). Routledge. https://doi.org/10.4324/9781003111238Isvoranu, .-M., Epskamp, S., Waldorp, L., & Borsboom, D. (Eds.). (2022). Network Psychometrics R: Guide Behavioral Social Scientists (1st ed.). Routledge. https://doi.org/10.4324/9781003111238","code":"#> \n#> Attaching package: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\n#> Package: NetworkToolbox: Methods and Measures for Brain, Cognitive, and Psychometric\n#> Network Analysis\n#> Version: 1.4.2\n#> Updated on: 2021-05-26\n#> Maintainer: Alexander P. Christensen, University of North Carolina at Greensboro\n#> Contributors: Guido Previde Massara, University College London\n#>  For citation information, type citation(\"NetworkToolbox\")\n#>  For vignettes, see <https://doi.org/10.32614/RJ-2018-065> \n#>  For bugs and errors, submit an issue to <https://github.com/AlexChristensen/NetworkToolbox/issues>\n#> \n#> Attaching package: 'NetworkToolbox'\n#> The following object is masked from 'package:qgraph':\n#> \n#>     smallworldness\n#> The following objects are masked from 'package:igraph':\n#> \n#>     betweenness, closeness, degree, diversity,\n#>     strength, transitivity\n#> Loading required package: ggplot2\n#> This is bootnet 1.6\n#> For questions and issues, please see github.com/SachaEpskamp/bootnet.\n#> \n#> Attaching package: 'bootnet'\n#> The following object is masked from 'package:NetworkToolbox':\n#> \n#>     binarize\n#> \n#> Attaching package: 'psych'\n#> The following objects are masked from 'package:ggplot2':\n#> \n#>     %+%, alpha\n#> The following objects are masked from 'package:NetworkToolbox':\n#> \n#>     cor2cov, distance\n#> Loading required package: Rcpp"},{"path":"基本概念与图论基础.html","id":"基本概念与图论基础","chapter":"2 基本概念与图论基础","heading":"2 基本概念与图论基础","text":"","code":""},{"path":"基本概念与图论基础.html","id":"网络与图的概念","chapter":"2 基本概念与图论基础","heading":"2.1 网络与图的概念","text":"","code":""},{"path":"基本概念与图论基础.html","id":"结点与边","chapter":"2 基本概念与图论基础","heading":"2.1.1 结点与边","text":"网络（或图）1一般由结点和边组成。在心理学的网络分析中，结点（node或vertex）代表网络中的个体或实体，如心理特质、症状、因素、社会个体等等。边（edge）则表示结点之间的关系或连接，如相关性、因果关系、相互作用、社会关系等。","code":""},{"path":"基本概念与图论基础.html","id":"有向图与无向图","chapter":"2 基本概念与图论基础","heading":"2.1.2 有向图与无向图","text":"有向图（directed graph）中的边具有方向性，表示从一个结点指向另一个结点的关系。例如，微博上的关注关系就是有向的。在心理学的研究中，有时使用有向图来表示变量之间的因果关系。无向图（undirected graph）中的边没有方向性，表示结点之间的双向关系，如微信上的好友关系。很多临床心理学领域的网络分析就使用的是无向图，例如一个由多个变量之间的相关系数构成的网络就是无向图。下图就是一个关注多个临床心理学症状的网络分析的示例2。","code":""},{"path":"基本概念与图论基础.html","id":"有权图与无权图","chapter":"2 基本概念与图论基础","heading":"2.1.3 有权图与无权图","text":"有权图（weighted graph）中的边具有权重，表示关系的强度或容量。例如，一个描述各种心理症状关系的网络中的权重可能是症状之间的偏相关系数。无权图（unweighted graph）中的边没有权重，表示关系的存在或不存在。","code":""},{"path":"基本概念与图论基础.html","id":"图的表示邻接矩阵","chapter":"2 基本概念与图论基础","heading":"2.1.4 图的表示：邻接矩阵","text":"邻接矩阵（adjacency matrix）是一种表示图的方法，其中矩阵的行和列对应于图的结点，矩阵中的元素表示结点之间的边。例如，元素 \\(A_{ij}\\) 表示结点 \\(\\) 和结点 \\(j\\) 之间是否存在边。在有权图中，\\(A_{ij}\\) 也表示两个结点之间的权重。例如，一个包括5个结点的网络的邻接矩阵如下：\\[\n\\begin{bmatrix}\n0& 2.5& 0& 0& 7.8\\\\\n0& 0& 3.1& 0& 0\\\\\n0& 0& 0& 4.6& 0\\\\\n0& 0& 0& 0& 5.2\\\\\n0& 0& 0& 0& 0\n\\end{bmatrix}\n\\]可以绘制为这样的一个有向图：当然我们也会发现，对于刚才的邻接矩阵，矩阵中的大部分元素都是0。这样的稀疏矩阵在存储时效率较低，当结点数量很庞大时会占用大量空间（空间复杂度\\(O(n^2)\\)）。因此，除了使用邻接矩阵，我们也可以使用邻接表等方法表示一个图。","code":""},{"path":"基本概念与图论基础.html","id":"在igraph里表示一个网络","chapter":"2 基本概念与图论基础","heading":"2.1.5 在igraph里表示一个网络","text":"igraph包是R语言中用于网络分析和图操作的强大工具。它提供了丰富的函数库，支持创建、操作、可视化和分析图结构。这一部分的教程将简单介绍igraph中一些重要的函数和操作。关于igraph的更多详细内容可以阅读该包的帮助文档或者访问igraph主页 https://r.igraph.org/。在igraph中，我们可以用一个igraph对象来表示一个网络。一般我们可以通过输入边列表或者邻接矩阵来创建igraph对象，我们也可以使用函数生成特定的随机网络。","code":"\nlibrary('igraph')\n#> \n#> Attaching package: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union"},{"path":"基本概念与图论基础.html","id":"从边列表创建","chapter":"2 基本概念与图论基础","heading":"2.1.5.1 从边列表创建","text":"创建igraph对象最常用的方法是make_graph，它会根据指定的边构建一个网络。 例如，要创建一个有8个结点（编号为1至8）以及连接结点1-2、2-3、3-4三条边的有向图：查看这个网络","code":"\nedges <- c(1, 2, 2, 3, 3, 4)\ng <- make_graph(edges, n = 8, directed = TRUE)\ng\n#> IGRAPH e4008f5 D--- 8 3 -- \n#> + edges from e4008f5:\n#> [1] 1->2 2->3 3->4"},{"path":"基本概念与图论基础.html","id":"从邻接矩阵创建","chapter":"2 基本概念与图论基础","heading":"2.1.5.2 从邻接矩阵创建","text":"另外一种比较常用的创建igraph对象的方法是从邻接矩阵创建。在心理学研究中，邻接矩阵往往相对容易获得，例如我们可以使用各种估计方法（如qgraph中的EBICglasso）获得变量之间的偏相关系数矩阵，这个偏相关系数矩阵就可以作为邻接矩阵创建我们的图。这个邻接矩阵可以表示无权图：也可以表示有权图：","code":"\nadjacent_matrix <- matrix(sample(0:1, 100, replace = TRUE, prob = c(0.9, 0.1)), ncol = 10)\ng <- graph_from_adjacency_matrix(adjacent_matrix)\ng\n#> IGRAPH e407cfb D--- 10 12 -- \n#> + edges from e407cfb:\n#>  [1]  1-> 5  2-> 1  4-> 4  4-> 9  7-> 5  7-> 7  9-> 1  9-> 4\n#>  [9]  9-> 6  9-> 7  9->10 10->10\nadjacent_matrix <- matrix(sample(0:5, 100, replace = TRUE, prob = c(0.9, 0.02, 0.02, 0.02, 0.02, 0.02)), ncol = 10)\ng <- graph_from_adjacency_matrix(adjacent_matrix, weighted = TRUE)\ng\n#> IGRAPH e40b87e D-W- 10 5 -- \n#> + attr: weight (e/n)\n#> + edges from e40b87e:\n#> [1]  2->2  4->8  6->6  9->7 10->9"},{"path":"基本概念与图论基础.html","id":"生成随机网络","chapter":"2 基本概念与图论基础","heading":"2.1.5.3 生成随机网络","text":"igraph为我们提供了一系列生成随机图的方法，这些函数一般以sample开头。例如，我们可以使用sample_smallworld生成一个Watts-Strogatz小世界网络。Watts-Strogatz小世界网络是一种特殊的复杂网络模型，由Duncan J. Watts和Steven Strogatz在1998年提出。这种网络模型结合了规则网络和随机网络的特性，具有高集聚系数（节点的邻居之间也有较高的连接概率，形成“团簇”）和短平均路径长度（尽管大部分节点彼此不直接相连，但通过少数几步就可以到达），能够很好地解释许多现实世界中的网络现象，如社交网络的“六度分隔”现象等。","code":"\ng <- sample_smallworld(1, 50, 5, 0.05)\nplot(g)"},{"path":"基本概念与图论基础.html","id":"图论基础","chapter":"2 基本概念与图论基础","heading":"2.2 图论基础","text":"","code":""},{"path":"基本概念与图论基础.html","id":"结点的度","chapter":"2 基本概念与图论基础","heading":"2.2.1 结点的度","text":"度（degree）是指一个结点连接的边的数量。在有向图中，度可以分为入度（-degree）和出度（-degree），分别表示指向该结点的边数和从该结点出发的边数。结点的度可以表示为：","code":""},{"path":"基本概念与图论基础.html","id":"路径","chapter":"2 基本概念与图论基础","heading":"2.2.2 路径","text":"对于一个图，我们往往会关心一个结点和另一个结点之间的关系，而要研究两个结点之间的关系，就不得不先知道两个结点之间的路径。路径（path）是指在图中从一个结点到另一个结点的结点序列。路径的长度由路径上的边数决定。如果路径序列中结点不重复出现，那我们称这个路径为简单路径。路径可以帮助分析网络中结点之间的可达性和距离。在计算结点间的路径时，我们有时还会遇到环。环（loop），又称回路，指的是第一个结点和最后一个结点相同的路径。有时从一个结点到另一个结点的路径可能有很多，但是这些路径之中一定有一个最短路径，即路径上边的权重之和最小的路径。而这个最短路径就是两个结点之间的距离。Dijkstra算法Dijkstra算法是荷兰计算机科学家Edsger W. Dijkstra于1956年提出的一种用于计算有权图中最短路径的经典算法。该算法适用于包含非负权重的有向图和无向图。Dijkstra算法的核心思想是通过贪心策略逐步扩展最近的未处理结点，并更新其邻居结点的距离，直到所有结点的最短路径都确定。具体步骤如下：初始化：从起始结点开始，设置起始结点到自身的距离为0，其他结点的距离为无穷大。将所有结点标记为未访问。初始化：从起始结点开始，设置起始结点到自身的距离为0，其他结点的距离为无穷大。将所有结点标记为未访问。选择结点：从未访问的结点中选择一个距离起始结点最近的结点作为当前结点。选择结点：从未访问的结点中选择一个距离起始结点最近的结点作为当前结点。更新距离：对于当前结点的每个邻居结点，计算从起始结点经过当前结点到达该邻居结点的距离。如果该距离小于当前记录的距离，则更新该邻居结点的距离。更新距离：对于当前结点的每个邻居结点，计算从起始结点经过当前结点到达该邻居结点的距离。如果该距离小于当前记录的距离，则更新该邻居结点的距离。标记访问：将当前结点标记为已访问。标记访问：将当前结点标记为已访问。重复：重复步骤2到4，直到所有结点都被访问。重复：重复步骤2到4，直到所有结点都被访问。在igraph中，我们可以使用shortest_paths计算结点之间的最短路径。注意，要计算最短路径时，我们需要将网络中的边权重视为结点之间的距离，然而这在某些心理学网络的分析中是不合适的。比如，对于一个由偏相关系数矩阵构建的网络，结点A与结点B的边权重很大意味着两个结点的关联很紧密，但是在计算最短路径时二者的距离将视为很远。最短路径往往是在社交网络的分析中使用。现在我们采用igraph主页的示例生成一个简单的社交网络计算最短路径。我们也可以用distances计算结点之间的距离矩阵。","code":"\nsocial_network <- make_graph(\n  ~ Alice - Boris:Himari:Moshe, Himari - Alice:Nang:Moshe:Samira,\n  Ibrahim - Nang:Moshe, Nang - Samira\n)\nplot(social_network)\nshortest_paths(social_network, \"Alice\", \"Nang\")\n#> $vpath\n#> $vpath[[1]]\n#> + 3/7 vertices, named, from e41eab2:\n#> [1] Alice  Himari Nang  \n#> \n#> \n#> $epath\n#> NULL\n#> \n#> $predecessors\n#> NULL\n#> \n#> $inbound_edges\n#> NULL\ndistances(social_network)\n#>         Alice Boris Himari Moshe Nang Samira Ibrahim\n#> Alice       0     1      1     1    2      2       2\n#> Boris       1     0      2     2    3      3       3\n#> Himari      1     2      0     1    1      1       2\n#> Moshe       1     2      1     0    2      2       1\n#> Nang        2     3      1     2    0      1       1\n#> Samira      2     3      1     2    1      0       2\n#> Ibrahim     2     3      2     1    1      2       0"},{"path":"基本概念与图论基础.html","id":"连通性","chapter":"2 基本概念与图论基础","heading":"2.2.3 连通性","text":"连通性（connectivity）描述了图中结点之间的连接程度。如果图中任意两个结点之间都存在路径我们就称这个图是连通的。连通性可以帮助识别网络中的孤立结点和子图。一个无向图中的极大连通子图称为连通分量（一个图可有多个）。在有向图中，如果对于每一对结点\\(\\)和\\(j\\)，从\\(\\)到\\(j\\)和从\\(j\\)到\\(\\)都存在路径，则称这个图是强连通图。有向图中的极大强连通子图称为强连通分量。图的遍历图的遍历指的是从图中某一结点出发访遍图中其余结点，且使每一个结点被访问且仅被访问一次。图的遍历算法是求解图的连通性问题、拓扑问题等算法的基础。图的遍历通常有两种方法：深度优先搜索（Depth-First Search, DFS）和广度优先搜索（Breadth-First Search, BFS）。深度优先搜索：从图的指定结点\\(v\\)出发，先访问结点\\(v\\)，并将其标记为已访问过，然后依次从\\(v\\)的未被访问过的邻接结点\\(w\\)出发进行深度优先搜索，直到图中与\\(v\\)相连的所有结点都被访问过。如果图中还有未被访问的结点，则从另一未被访问过的结点出发重复上述过程，直到图中所有结点都被访问过为止。广度优先搜索：从图的指定结点\\(v\\)出发，先访问结点\\(v\\)，接着依次访问\\(v\\)的所有邻结点\\(w_1\\), \\(w_2\\), … , \\(w_x\\)，然后，再依次访问与\\(w_1\\), \\(w_2\\), …, \\(w_x\\) 邻接的所有未被访问过的结点，以此类推，直到所有已访问结点的邻接结点都被访问过为止。如果图中还有未被访问过的结点，则从另一未被访问过的结点出发进行广度优先搜索，直到所有结点都被访问过为止。","code":""},{"path":"网络的构建.html","id":"网络的构建","chapter":"3 网络的构建","heading":"3 网络的构建","text":"心理学研究中的网络分析常常作为一种多变量分析的方法，特别是分析心理测量学数据，因此也称为心理测量学网络分析（psychometric network analysis）。本章节介绍的网络构建方法就是基于心理测量学数据，其他类型的网络（如社交网络、因果关系网络等）不在本章讨论范围之内。","code":""},{"path":"网络的构建.html","id":"构建网络的数据","chapter":"3 网络的构建","heading":"3.1 构建网络的数据","text":"本章中讨论的心理测量学数据，一般指的是量表项目的作答、症状评分和认知测试得分等等，有时可能还包括背景变量（如年龄和性别、遗传信息、生理标记、医疗条件、实验干预等），这些变量在网络中就是结点。基于我们所关心的研究问题，我们收集到的数据一般包括横断面数据、时间序列数据和面板设计。横断面数据（cross-sectional data）：在横断面数据中，网络是大样本（T = 1，N很大）中单一时间点测量的变量之间条件关联的描述。在这种情况下，变量之间的关联是由个体差异驱动的，这使得此类网络在研究心理测验的心理测量学结构时非常有用。横断面数据（cross-sectional data）：在横断面数据中，网络是大样本（T = 1，N很大）中单一时间点测量的变量之间条件关联的描述。在这种情况下，变量之间的关联是由个体差异驱动的，这使得此类网络在研究心理测验的心理测量学结构时非常有用。时间序列数据（time-series data）：在时间序列数据中，网络描述了个体（T很大，N ≥ 1）的变量时间序列之间的多变量依赖关系。此类网络最常应用于需要深入了解系统动态结构的情景。时间序列数据（time-series data）：在时间序列数据中，网络描述了个体（T很大，N ≥ 1）的变量时间序列之间的多变量依赖关系。此类网络最常应用于需要深入了解系统动态结构的情景。面板数据（panel data）：在面板数据（也称为纵向数据）的中，一组有限的重复测量既能描述给定时间点变量的关联结构，也能描述这些条件依赖关系随时间（N > T）变化的方式。这种测量方法可以同时揭示个体差异和个体内部变化的结构。面板数据（panel data）：在面板数据（也称为纵向数据）的中，一组有限的重复测量既能描述给定时间点变量的关联结构，也能描述这些条件依赖关系随时间（N > T）变化的方式。这种测量方法可以同时揭示个体差异和个体内部变化的结构。","code":""},{"path":"网络的构建.html","id":"pmrf","chapter":"3 网络的构建","heading":"3.2 PMRF","text":"大多数网络构建方法使用条件关联（conditional association）来定义变量中的网络结构。当两个变量之间存在概率依赖关系时，这两个变量之间的条件关联就成立，而条件就是数据中的所有其他变量。使用哪种条件关联的度量取决于数据的结构，例如，对于多元正态数据可以使用偏相关（partial correlation），而对于二分数据可以使用逻辑回归系数（logistic regression coefficient）。这种条件关联在网络中通常描述为两个结点之间的边权重。如果两个变量之间的关联可以用网络中的其他变量来解释，则当这些其他变量被控制时，它们之间的条件关联就会消失，那么相应的结点就会在网络中无直接连接。在构建网络时，我们经常采用配对马尔科夫随机场（Pairwise Markov Random Field , PMRF）来描述多变量的联合概率分布。RMRF实际上是一种无向图模型，以结点表示变量、以边表示变量间的条件关联。PMRF应用十分广泛，可以作为统计模型的框架，也可以作为预测模型或从中发现潜在的因果关系。PMRF由很多种类型。如果数据是连续的，一种常用的PMRF是高斯图模型（Gaussian Graphical Model, GGM），其中边的权重为偏相关系数（partial correlation coefficient），因此高斯图模型的实质就是一个偏相关系数矩阵。如果数据是二分的，则可以使用Ising模型，其中边的权重为对数线性关系。Ising模型和高斯图模型可以结合到混合图模型中，在混合图模型中，边被表示为为广义线性模型的回归系数。混合图模型代表了PMRF估计的最一般方法，也允许包含分类变量和计数变量。","code":""},{"path":"网络的构建.html","id":"高斯图模型","chapter":"3 网络的构建","heading":"3.2.1 高斯图模型","text":"高斯图模型（Gaussian Graphical Model, GGM）是一种常见的应用于连续型变量的PMRF，其实质是一个偏相关稀疏矩阵，因此也叫偏相关系数网络。设\\(\\boldsymbol{Y}\\)为表示一个被试的\\(n\\)个反应变量的向量，我们假设\\(\\boldsymbol{Y}\\)服从均值向量为\\(\\boldsymbol{\\mu}\\)、协方差矩阵为\\(\\boldsymbol{\\Sigma}\\)的正态分布：\\[\n\\boldsymbol{Y}\\sim N(\\boldsymbol{\\mu},\\boldsymbol{\\Sigma})\n\\]在高斯图模型中，我们关心协方差矩阵的逆\\(\\boldsymbol{K}\\)，也叫精确矩阵（precision matrix）：\\[\n\\boldsymbol{K}=\\boldsymbol{\\Sigma}^{-1}\n\\]精确矩阵可以转换为偏相关系数：\\[\n\\omega_{ij}=-\\frac{\\kappa_{ij}}{\\sqrt{\\kappa_{ii}\\kappa_{jj}}}\\ \\ \\text{}\\ \\neq j\n\\]在bootnet包中，我们可以用estimateNetwork函数来估计一个高斯图模型，即得到一个偏相关系数网络。我们使用psych包中的大五人格数据bfi，我们只取前25个量表的数据。我们可以根据偏相关系数的显著性进行边的选择，设置threshold = \"sig\"，阈值\\(\\alpha\\)设为0.05。","code":"\nlibrary(bootnet)\n#> Loading required package: ggplot2\n#> This is bootnet 1.6\n#> For questions and issues, please see github.com/SachaEpskamp/bootnet.\nlibrary(psych)\n#> \n#> Attaching package: 'psych'\n#> The following objects are masked from 'package:ggplot2':\n#> \n#>     %+%, alpha\ndata(bfi)\nbfi <- bfi[,1:25]\nnetwork <- estimateNetwork(bfi, default = \"pcor\")\n#> Estimating Network. Using package::function:\n#>   - qgraph::qgraph(..., graph = 'pcor') for network computation\n#>   - psych::corr.p for significance thresholding\nnetwork <- estimateNetwork(bfi, default = \"pcor\", threshold = \"sig\", alpha = 0.05)\n#> Estimating Network. Using package::function:\n#>   - qgraph::qgraph(..., graph = 'pcor') for network computation\n#>   - psych::corr.p for significance thresholding\nplot(network)"},{"path":"网络的构建.html","id":"graphical-lasso","chapter":"3 网络的构建","heading":"3.2.1.1 Graphical LASSO","text":"如刚才建立的网络所示，各个结点之间的边多而繁杂，有时会对分析造成困扰。这个时候我们就需要考虑模型选择（model selection）：如何确定哪些边应该被包含在内，哪些边可以被省略。刚才我们根据偏相关系数的显著性设定阈值进行了选择，下面我们将介绍另外一种模型选择方法——正则化（regularization）。正则化涉及到通过惩罚最大似然估计来估计边权值，具体而言就是在估计模型参数时，模型的拟合会受到模型中参数的复杂性的惩罚（例如，网络中包含了多少条边）。经常应用于PMRF的正则化是“图像最小绝对值收敛和选择算法” （graphical Least Absolute Shrinkage Selection Operator, graphical LASSO）。graphical LASSO以一个协方差矩阵或相关矩阵作为输入，并使用正则化的多元估计来估计GGM。惩罚的大小通过一个调谐参数\\(\\lambda\\)确定，\\(\\lambda\\)为0表示没有惩罚。正则化与LASSO的原理在正则化中，参数通过优化经过惩罚的似然函数（penalized likelihood function）进行估计。令\\(L(\\boldsymbol{D};\\boldsymbol{\\theta})\\)为数据\\(\\boldsymbol{D}\\)在给定参数\\(\\boldsymbol{\\theta}\\)下的对数似然函数。一般而言，参数的最大似然估计为：\\[\n\\boldsymbol{\\hat{\\theta}}=\\text{argmax}_\\theta(L(\\boldsymbol{D};\\boldsymbol{\\theta}))\n\\]在正则化中，一个惩罚项被添加到表达式中：\\[\n\\boldsymbol{\\hat{\\theta}}=\\text{argmax}_\\theta(L(\\boldsymbol{D};\\boldsymbol{\\theta})-\\lambda \\text{Penalty}(\\boldsymbol{\\theta}))\n\\]在LASSO中，惩罚项为：\\[\n\\text{Penalty}_{\\text{LASSO}}(\\boldsymbol{\\theta})=\\sum_{\\S}|\\theta_i|\n\\]其中，\\(S\\)为受到惩罚的参数的集合。关于Graphical LASSO可以参考文献Friedman, J., Hastie, T., & Tibshirani, R. (2008). Sparse inverse covariance estimation graphical lasso. Biostatistics, 9(3), 432–441. https://doi.org/10.1093/biostatistics/kxm045在R语言中，glasso包为我们提供了使用Graphical LASSO进行网络估计的函数。","code":""},{"path":"网络的构建.html","id":"ebicglasso","chapter":"3 网络的构建","heading":"3.2.1.2 EBICglasso","text":"在R语言中，目前最常用的一种Graphical LASSO算法是qgraph包中的EBICglasso，这种算法将Graphical LASSO和扩展贝叶斯信息准则（Extended Bayesian Information Criterion, EBIC）结合，它在网络分析特别是在处理高维数据时非常有效。算法中EBIC用于选择最佳的调谐参数，平衡模型的拟合优度和复杂度。EBIC在传统BIC的基础上增加了一个调节项，以更好地处理高维数据。qgraph包是R语言中用于绘制和分析加权网络的强大工具。它最初由Sacha Epskamp3 等人开发，旨在提供灵活且高效的网络可视化方法，特别适用于心理测量数据的可视化和图形模型的估计。在qgraph中，我们首先使用cor_auto计算数据的相关系数矩阵。cor_auto函数主要用于自动计算适当的相关系数矩阵。它是一个围绕lavaan包中lavCor函数的封装，能够基于多种相关性（如多序列相关、序列相关和皮尔逊相关）计算相关系数矩阵。cor_auto可以自动检测有序变量，并检测相关系数矩阵是否正定4。然后，我们可以使用EBICglasso函数估计GGM。EBICglasso接受传入一个相关系数矩阵或协方差矩阵，传出结果为一个偏相关系数矩阵。函数中有一个EBIC的参数gamma，默认为0.5，取0时将采用传统的BIC选择参数。对于得到的偏相关系数矩阵，也就是GGM，我们可以使用qgraph函数构建网络并进行可视化。qgraph接受传入的数据类型可以是一个权重矩阵（如偏相关系数矩阵）或者一个边列表，也可以是使用sem包得到的sem类型、lavaan包得到的lavaan类型等其他类型的对象。qgraph能够构建网络返回一个qgraph对象，同时把结果传递给绘图函数绘制图像。","code":"\nlibrary(qgraph)\nbfi_data <- na.omit(bfi)\ncorrelation <- cor_auto(bfi_data, detectOrdinal = FALSE)\nEBICglasso_result <- EBICglasso(correlation, n = nrow(bfi_data), gamma = 0.5)\n#> Warning in EBICglassoCore(S = S, n = n, gamma = gamma,\n#> penalize.diagonal = penalize.diagonal, : A dense\n#> regularized network was selected (lambda < 0.1 *\n#> lambda.max). Recent work indicates a possible drop in\n#> specificity. Interpret the presence of the smallest edges\n#> with care. Setting threshold = TRUE will enforce higher\n#> specificity, at the cost of sensitivity.\nnetwork <- qgraph(EBICglasso_result, \n                  layout = \"spring\", parallelEdge = TRUE, \n                  cut = 0, theme = \"colorblind\")"},{"path":"网络的构建.html","id":"ising模型","chapter":"3 网络的构建","heading":"3.2.2 Ising模型","text":"Ising模型是用于估计二分变量的联合概率分布的网络估计方法。Ising模型最初是由物理学家Ernst Ising在1925年提出，用于研究磁性材料中的自旋相互作用，后来被用到网络分析领域。Ising模型中的每个结点（或变量）都有一个自旋，通常表示为+1和-1（或0和1）。在进行参数估计时，Ising模型采用逻辑斯蒂回归计算结点之间的相关关系。Ising模型可以表示为：\\[\nP(\\boldsymbol{Y}=\\boldsymbol{y})=\\frac{\\exp(\\sum_Iy_i\\tau_i+\\sum_{<,j>}y_iy_j\\omega_{ij})}{\\sum_y\\exp(\\sum_iy_i\\tau_i+\\sum_{<,j>}y_iy_j\\omega_{ij})}\n\\]其中\\(\\boldsymbol{Y}\\)为一个被试的二分类反应变量的向量，参数\\(\\tau_i\\)为一个阈值，\\(\\omega_{ij}\\)为网络参数，表示变量\\(\\)和变量\\(j\\)之间关联的强度。在R语言中，我们可以使用IsingSampler和IsingFit两个包来进行Ising模型的采样（模拟数据）和拟合。首先我们可以在igraph中创建一个小世界网络，并为各个边赋予权重，然后使这个权重矩阵为对角矩阵。随后我们使用IsingSampler进行采样模拟数据得到数据后，我们可以使用IsingFit包中的IsingFit函数拟合模型。IsingFit使用eLASSO算法拟合参数。eLASSO是一种用于二分数据的估计法，结合了伪似然估计和LASSO。关于Ising模型和eLASSO可以参考文献van Borkulo, C. D., Borsboom, D., Epskamp, S., Blanken, T. F., Boschloo, L., Schoevers, R. ., & Waldorp, L. J. (2014). new method constructing networks binary data. Scientific Reports, 4(1), 5918. https://doi.org/10.1038/srep05918Finnemann, ., Borsboom, D., Epskamp, S., & van der Maas, H. L. J. (2021). Theoretical Statistical Ising Model: Practical Guide R. Psych, 3(4), Article 4. https://doi.org/10.3390/psych3040039","code":"\nlibrary(igraph)\n#> \n#> Attaching package: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\nlibrary(IsingSampler)\n#> Loading required package: Rcpp\nlibrary(IsingFit)\nset.seed(2024)\n\nn_nodes <- 8\nsmallworld_network <- sample_smallworld(dim = 1, \n                                        size = n_nodes, nei = 1, p = 0.2) %>%\n  as_adjacency_matrix() %>%\n  as.matrix() %>%\n  apply(c(1,2),function(x) x * rnorm(1, mean = 1, sd = 0.3))\nsmallworld_network[lower.tri(smallworld_network)] <- t(smallworld_network)[lower.tri(smallworld_network)]\n\nqgraph(smallworld_network, layout = \"spring\")\nsample <- IsingSampler(n = 1000, \n                     graph = smallworld_network,\n                     thresholds = rep(0,nrow(smallworld_network)), \n                     beta = 1,\n                     responses = c(0L, 1L))sample_fit <- IsingFit(sample, gamma = 0.5, AND = TRUE)\n#> \n  |                                                        \n  |                                                  |   0%\n  |                                                        \n  |======                                            |  12%\n  |                                                        \n  |============                                      |  25%\n  |                                                        \n  |===================                               |  38%\n  |                                                        \n  |=========================                         |  50%\n  |                                                        \n  |===============================                   |  62%\n  |                                                        \n  |======================================            |  75%\n  |                                                        \n  |============================================      |  88%\n  |                                                        \n  |==================================================| 100%"},{"path":"网络的构建.html","id":"混合图模型","chapter":"3 网络的构建","heading":"3.2.3 混合图模型","text":"","code":""},{"path":"网络的构建.html","id":"向量自回归模型","chapter":"3 网络的构建","heading":"3.3 向量自回归模型","text":"","code":""},{"path":"网络的构建.html","id":"参考文献","chapter":"3 网络的构建","heading":"3.4 参考文献","text":"Borsboom, D., Deserno, M. K., Rhemtulla, M., Epskamp, S., Fried, E. ., McNally, R. J., Robinaugh, D. J., Perugini, M., Dalege, J., Costantini, G., Isvoranu, .-M., Wysocki, . C., van Borkulo, C. D., van Bork, R., & Waldorp, L. J. (2021). Network analysis multivariate data psychological science. Nature Reviews Methods Primers, 1(1), 1–18. https://doi.org/10.1038/s43586-021-00055-wBorsboom, D., Deserno, M. K., Rhemtulla, M., Epskamp, S., Fried, E. ., McNally, R. J., Robinaugh, D. J., Perugini, M., Dalege, J., Costantini, G., Isvoranu, .-M., Wysocki, . C., van Borkulo, C. D., van Bork, R., & Waldorp, L. J. (2021). Network analysis multivariate data psychological science. Nature Reviews Methods Primers, 1(1), 1–18. https://doi.org/10.1038/s43586-021-00055-wEpskamp, S., Waldorp, L. J., Mõttus, R., & Borsboom, D. (2018). Gaussian Graphical Model Cross-Sectional Time-Series Data. Multivariate Behavioral Research, 53(4), 453–480. https://doi.org/10.1080/00273171.2018.1454823Epskamp, S., Waldorp, L. J., Mõttus, R., & Borsboom, D. (2018). Gaussian Graphical Model Cross-Sectional Time-Series Data. Multivariate Behavioral Research, 53(4), 453–480. https://doi.org/10.1080/00273171.2018.1454823Isvoranu, .-M., Epskamp, S., Waldorp, L., & Borsboom, D. (Eds.). (2022). Network Psychometrics R: Guide Behavioral Social Scientists (1st ed.). Routledge. https://doi.org/10.4324/9781003111238Isvoranu, .-M., Epskamp, S., Waldorp, L., & Borsboom, D. (Eds.). (2022). Network Psychometrics R: Guide Behavioral Social Scientists (1st ed.). Routledge. https://doi.org/10.4324/9781003111238","code":""},{"path":"网络的描述.html","id":"网络的描述","chapter":"4 网络的描述","heading":"4 网络的描述","text":"在构建好网络后，我们就可以对构建好的网络进行描述和分析。首先我们需要对网络进行可视化，也就是将边的列表或权重矩阵转换为图形，在R语言中我们一般使用igraph或者qgraph来进行。对于网络的性质，我们一般可以通过对结点的中心性和网络的拓扑结果进行分析。","code":""},{"path":"网络的描述.html","id":"网络可视化","chapter":"4 网络的描述","heading":"4.1 网络可视化","text":"在R语言中对一个网络，例如igraph对象或qgraph对象，可以使用plot函数进行作图。绘制网络。例如，我们可以创建一个20世纪70年代美国一所大学空手道俱乐部34名成员之间的社交网络5。当然，这只是最最简单的可视化方法，为了得到更加美观和有意义的可视化图形，我们可以采用很多方法。","code":"\nlibrary(igraph)\n#> \n#> Attaching package: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\nzachary_graph <- make_graph('Zachary')\nplot(zachary_graph)"},{"path":"网络的描述.html","id":"布局算法","chapter":"4 网络的描述","heading":"4.1.1 布局算法","text":"图是一个抽象的数学对象，在二维、三维或任何其他几何空间中都没有特定的表示形式。 这就意味着，无论何时我们想将图形可视化，都必须先找到二维或三维空间中顶点到坐标的映射。图论的一个独立分支，即图绘制，试图通过多种图布局算法来解决这个问题。igraph实现了很多布局算法，还能将它们绘制到屏幕上或R本身支持的任何输出格式。一种常见的布局是把所有结点放在在一个圆环上，可以使用layout_in_circle获得布局，这里得到的是一个N行2列的矩阵，代表了每个结点在二维空间中的坐标。当然，除了直接得到一个单独的布局的矩阵，我们也可以直接在plot中设置layout参数时指定布局算法。例如，我们可以采用Kamada-Kawai算法设计布局。Kamada-Kawai算法是一种用于图布局的力引导算法，旨在将图中的节点在二维或三维空间中进行美观的布局。该算法通过模拟物理系统中的弹簧力并使系统总能量最小化来实现节点的优化排列。如果不指定布局的话，默认采用Fruchterman-Reingold算法，这也是一种常用的力引导布局算法，该算法也基于物理模拟的思想，将结点视为带电粒子，通过斥力和引力的相互作用来调整节点的位置。除了这些igraph还提供了多种布局算法，详情可以访问igraph主页的相关介绍 https://r.igraph.org/articles/igraph.html#layout-algorithms。在qgraph中使用qgraph作图时可以通过设定layout参数指定网络的布局算法。主要有三种布局：“circle”、“groups”和”spring”。“circle”布局中所有结点排列在一个圆环上，“groups”使得每一个组的结点排列在一个圆环，“spring”即Fruchterman-Reingold算法布局（igraph曾经也有一个布局叫”spring”但是现在已经移除）。当然，layout也可以直接传入包含所有结点坐标的矩阵。","code":"\ncircle_layout <- layout_in_circle(zachary_graph)\nplot(zachary_graph, layout = circle_layout, main = \"Zachary Social network with circle layout\")\nplot(zachary_graph, layout = layout_with_kk, main = \"Zachary Social network with the Kamada-Kawai layout algorithm\")\nlibrary(qgraph)\nadj_matrix <- as_adjacency_matrix(zachary_graph) %>%\n  as.matrix()\nqgraph(adj_matrix, layout = \"spring\")"},{"path":"网络的描述.html","id":"结点的中心性","chapter":"4 网络的描述","heading":"4.2 结点的中心性","text":"结点的中心性（centrality）描述了一个结点和其他结点的关联，是衡量结点在网络中重要性的一类指标。常见的中心性指标包括强度（strength）、度中心性（degree centrality）、接近中心性（closeness centrality）、中介中心性（betweenness centrality）、特征向量中心性（eigenvector centrality）和预期影响（expected influence, EI）。这些指标可以帮助识别网络中的关键结点。这些中心性指标中，有些适用于大多数网络，而有些则只适用于特定的网络，因此在使用时需要格外小心。","code":""},{"path":"网络的描述.html","id":"结点强度","chapter":"4 网络的描述","heading":"4.2.1 结点强度","text":"结点的强度即是某个结点与之相连的边的权重的绝对值之和：\\[\n\\text{Strength}()=\\sum_{j=1}^n|w_{ij}|\n\\]其中，\\(w_{ij}\\)表示结点\\(\\)和结点\\(j\\)之间的边权重。结点强度表示了变量与网络中其他变量的平均条件关联程度，是经常使用的中心性指标。在igraph中，我们可以使用strength计算结点的强度。","code":"\nstrength(zachary_graph)\n#>  [1] 16  9 10  6  3  4  4  4  5  2  3  1  2  5  2  2  2  2\n#> [19]  2  3  2  2  2  5  3  3  2  4  3  4  4  6 12 17"},{"path":"网络的描述.html","id":"度中心性","chapter":"4 网络的描述","heading":"4.2.2 度中心性","text":"度中心性是衡量一个结点在网络中直接连接到其他结点数量的指标。它是最简单、最直观的中心性度量方法。无向图中的度中心性等于该结点的度，即与该节点直接相连的边的数量。有向图中的度中心性可以进一步分为入度中心性和出度中心性。入度中心性表示指向该结点的边的数量，出度中心性表示从该结点出发的边的数量。在igraph中，我们可以使用degree计算结点的度。","code":"\ndegree(zachary_graph)\n#>  [1] 16  9 10  6  3  4  4  4  5  2  3  1  2  5  2  2  2  2\n#> [19]  2  3  2  2  2  5  3  3  2  4  3  4  4  6 12 17"},{"path":"网络的描述.html","id":"接近中心性","chapter":"4 网络的描述","heading":"4.2.3 接近中心性","text":"接近中心性指的是一个结点到网络中所有其他结点的平均最短路径长度的倒数，衡量了结点与其他结点之间的远近关系。接近中心性高的结点通常位于网络的中心位置，能够更快地与其他结点进行通信。结点\\(v\\)接近中心性的计算公式如下：\\[\n\\text{Closness}() = \\frac{1}{\\sum_{\\neq j}d_{ji}}\n\\]其中，\\(\\)表示图中非\\(j\\)的结点，\\(d_{ji}\\)表示结点\\(j\\)到结点\\(\\)的最短路径。需要注意的是，接近中心性的概念是以距离为基础，最初在社交网络中使用。在心理测量学数据的网络分析中，边权重表示变量间的条件关联，权重越大关联越大，不能认为距离越远，因此接近中心性不一定适用。在igraph中，我们可以使用closeness计算结点的接近中心性。","code":"\ncloseness(zachary_graph)\n#>  [1] 0.01724138 0.01470588 0.01694915 0.01408451 0.01149425\n#>  [6] 0.01162791 0.01162791 0.01333333 0.01562500 0.01315789\n#> [11] 0.01149425 0.01111111 0.01123596 0.01562500 0.01123596\n#> [16] 0.01123596 0.00862069 0.01136364 0.01123596 0.01515152\n#> [21] 0.01123596 0.01136364 0.01123596 0.01190476 0.01136364\n#> [26] 0.01136364 0.01098901 0.01388889 0.01369863 0.01162791\n#> [31] 0.01388889 0.01639344 0.01562500 0.01666667"},{"path":"网络的描述.html","id":"中介中心性","chapter":"4 网络的描述","heading":"4.2.4 中介中心性","text":"中介中心性衡量一个结点在网络中作为其他结点对之间最短路径的中介程度，通过计算有多少条最短路径通过一个结点来衡量。中介中心性高的结点在网络中起到“桥梁”作用，控制着信息的流动。结点\\(v\\)中介中心性的计算公式如下：\\[\n\\text{Betweenness}() = \\sum_{\\neq j, \\neq k, j \\neq k} \\frac{g_{kij}}{g_{jk}}\n\\]其中，\\(g_{jk}\\)表示结点\\(j\\)到结点\\(k\\)的最短路径的数量，\\(g_{kij}\\)表示从\\(k\\)到\\(j\\)的经过\\(\\)的最短路径的数量。在igraph中，我们可以使用betweenness计算结点的中介中心性。","code":"\nbetweenness(zachary_graph)\n#>  [1] 231.0714286  28.4785714  75.8507937   6.2880952\n#>  [5]   0.3333333  15.8333333  15.8333333   0.0000000\n#>  [9]  29.5293651   0.4476190   0.3333333   0.0000000\n#> [13]   0.0000000  24.2158730   0.0000000   0.0000000\n#> [17]   0.0000000   0.0000000   0.0000000  17.1468254\n#> [21]   0.0000000   0.0000000   0.0000000   9.3000000\n#> [25]   1.1666667   2.0277778   0.0000000  11.7920635\n#> [29]   0.9476190   1.5428571   7.6095238  73.0095238\n#> [33]  76.6904762 160.5515873"},{"path":"网络的描述.html","id":"特征向量中心性","chapter":"4 网络的描述","heading":"4.2.5 特征向量中心性","text":"特征向量中心性是一种衡量网络中结点重要性的方法。它不仅考虑结点的直接连接数量，还考虑这些连接结点本身的重要性。换句话说，一个结点的中心性不仅取决于它有多少邻居结点，还取决于这些邻居结点的中心性。特征向量中心性可以通过计算邻接矩阵的主特征向量来获得。在igraph中，我们可以使用eigen_centrality计算结点的中介中心性。","code":"\neigen_centrality(zachary_graph)$vector\n#>  [1] 0.95213237 0.71233514 0.84955420 0.56561431 0.20347148\n#>  [6] 0.21288383 0.21288383 0.45789093 0.60906844 0.27499812\n#> [11] 0.20347148 0.14156633 0.22566382 0.60657439 0.27159396\n#> [16] 0.27159396 0.06330461 0.24747879 0.27159396 0.39616224\n#> [21] 0.27159396 0.24747879 0.27159396 0.40207086 0.15280670\n#> [26] 0.15857597 0.20242852 0.35749923 0.35107297 0.36147301\n#> [31] 0.46806481 0.51165649 0.82665886 1.00000000"},{"path":"网络的描述.html","id":"预期影响","chapter":"4 网络的描述","heading":"4.2.6 预期影响","text":"预期影响是一个考虑了网络中正负边权重的中心性指标，在含有负权重边的网络中优于传统中心性指标。当变量具有非任意性编码时，例如所有变量的值越高都表示更严重的症状时，这种方法可能比较合适。预期影响将连接到一个结点的边的权值相加，而不取绝对值：\\[\n\\text{ExpectedInfluence}()=\\sum_{j=1}^na_{ij}w_{ij}\n\\]\\(a_{ij}\\)表示结点\\(\\)和\\(j\\)是否直接相连。预期影响可以使用qgraph中的centrality计算。qgraph中还可以使用centrality_plot绘制中心性指标的图：在这个例子里面，度和预期影响是相同的，因为这是一个无权图。预期影响最初在这篇文献中提出：Robinaugh, D. J., Millner, . J., & McNally, R. J. (2016). Identifying highly influential nodes complicated grief network. Journal abnormal psychology, 125(6), 747–757. https://doi.org/10.1037/abn0000181","code":"\nzachary_qgraph <- qgraph(as.matrix(as_adjacency_matrix(zachary_graph)))\ncentrality(zachary_qgraph)$InExpectedInfluence\n#>  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 \n#> 16  9 10  6  3  4  4  4  5  2  3  1  2  5  2  2  2  2  2  3 \n#> 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \n#>  2  2  2  5  3  3  2  4  3  4  4  6 12 17\n\ncentralityPlot(zachary_qgraph, include = \"all\")"},{"path":"网络的描述.html","id":"网络的拓扑性质","chapter":"4 网络的描述","heading":"4.3 网络的拓扑性质","text":"除了量化网络的局部属性的度量之外，还有几个度量可以将网络架构作为一个整体来量化，称为全局网络属性。这种体系结构有时被称为网络的拓扑结构：网络中的结点和边的组织。了解网络的体系结构可以传递关于信息或活动在系统中传播的速度的信息。","code":""},{"path":"网络的描述.html","id":"连通性-1","chapter":"4 网络的描述","heading":"4.3.1 连通性","text":"连通性（connectivity）描述了图中结点之间的连接程度。如果图中任意两个结点之间都存在路径我们就称这个图是连通的。连通性可以帮助识别网络中的孤立结点和子图。一个无向图中的极大连通子图称为连通分量（一个图可有多个）。在有向图中，如果对于每一对结点\\(\\)和\\(j\\)，从\\(\\)到\\(j\\)和从\\(j\\)到\\(\\)都存在路径，则称这个图是强连通图。有向图中的极大强连通子图称为强连通分量。在igraph中，我们也可以计算图的连通性和连通分量。我们可以首先生成一个随机的图。这个图显然是不连通的。我们可以用is_connected检查一个图是否连通。我们可以用components计算连通分量。","code":"\nadjacent_matrix <- matrix(sample(0:1, 100, replace = TRUE, prob = c(0.9, 0.1)), ncol = 10)\ng <- graph_from_adjacency_matrix(adjacent_matrix)\nplot(g)\nis_connected(g)\n#> [1] FALSE\ncomponents(g)\n#> $membership\n#>  [1] 1 2 3 2 1 1 1 1 4 1\n#> \n#> $csize\n#> [1] 6 2 1 1\n#> \n#> $no\n#> [1] 4"},{"path":"网络的描述.html","id":"聚类系数","chapter":"4 网络的描述","heading":"4.3.2 聚类系数","text":"传递性（transitivity）又称聚类系数（clustering coefficient）， 测量的是一个结点的相邻顶点结点的概率。聚类系数包括两类：结点水平的局部聚类系数和网络水平的全局聚类系数。对于有权图的聚类系数有几种描述，这里我们使用A. Barrat的定义6，这是一个结点水平的局部聚类系数，其公式为\\[\nC_i^w = \\frac{1}{s_i(k_i-1)}\\sum_{j,h}\\frac{w_{ij}+w_{ih}}{2}a_{ij}a_{ih}a_{jh}\n\\]其中，\\(s_i\\)指结点\\(\\)的强度（该结点相连边权重之和），\\(a_{ij}\\)是邻接矩阵中的元素，\\(k_i\\)指结点\\(\\)的度，\\(w_{ij}\\)为边权重。在igraph中可以使用transitivity计算。以一个随机生成的小世界网络为例。","code":"\ng <- sample_smallworld(1, 50, 5, 0.05)\ntransitivity(g)\n#> [1] 0.5222565"},{"path":"网络的描述.html","id":"小世界性质","chapter":"4 网络的描述","heading":"4.3.3 小世界性质","text":"Duncan J. Watts和Steven Strogatz（1998）指出，许多网络具有介于随机网络和有组织网络之间的属性：网络是整体有组织的，但可能包括一些随机连接。这导致了一个平均最短路径（APL，整个网络中所有结点对之间的最短路径长度的平均值）都低和全局聚类都高的网络结构，这被称为小世界网络（small-world）。“小世界”是以六度分离现象命名的；所有人彼此之间平均只有六个社会联系。要量化一个网络\\(G\\)的小世界性质，我们可以把这个网络的APL和传递性与拥有同样结点个数的随机网络\\(G_R\\)的相应性质进行比较。一般来说小世界网络的APL与随机网络相似：\\[\n\\text{APL}(G)\\approx\\text{APL}(G_R)\n\\]而小世界网络的聚类性质比随机网络要高：\\[\n\\text{Transitivity}(G)\\gg\\text{Transitivity}(G_R)\n\\]一种计算小世界性质的方式是：\\[\n\\text{SmallWorld}(G)=\\frac{\\text{Transitivity}(G)/\\text{Transitivity}(G_R)}{\\text{APL}(G)/\\text{APL}(G_R)}\n\\]在qgraph中可以使用smallworldness计算小世界指标，该函数使用Humphries和Gurney（2008）的算法计算。参考文献：Humphries, M. D., & Gurney, K. (2008). Network “small-world-ness”: quantitative method determining canonical network equivalence. PLoS One, 3(4), e0002051. https://doi.org/10.1371/journal.pone.0002051","code":"\nsmallworldness(g)\n#>       smallworldness         trans_target \n#>            2.5561499            0.5222565 \n#> averagelength_target          trans_rnd_M \n#>            2.1951020            0.1743358 \n#>         trans_rnd_lo         trans_rnd_up \n#>            0.1467541            0.2022984 \n#>  averagelength_rnd_M averagelength_rnd_lo \n#>            1.8730261            1.8538776 \n#> averagelength_rnd_up \n#>            1.8955143"},{"path":"网络聚类分析.html","id":"网络聚类分析","chapter":"5 网络聚类分析","heading":"5 网络聚类分析","text":"","code":""},{"path":"网络聚类分析.html","id":"聚类系数-1","chapter":"5 网络聚类分析","heading":"5.1 聚类系数","text":"","code":""},{"path":"网络聚类分析.html","id":"边中介算法","chapter":"5 网络聚类分析","heading":"5.2 边中介算法","text":"","code":""},{"path":"网络聚类分析.html","id":"标签传播算法","chapter":"5 网络聚类分析","heading":"5.3 标签传播算法","text":"","code":""},{"path":"网络聚类分析.html","id":"louvain算法","chapter":"5 网络聚类分析","heading":"5.4 Louvain算法","text":"","code":""},{"path":"网络聚类分析.html","id":"随机游走算法","chapter":"5 网络聚类分析","heading":"5.5 随机游走算法","text":"","code":""},{"path":"网络聚类分析.html","id":"信息映射算法","chapter":"5 网络聚类分析","heading":"5.6 信息映射算法","text":"","code":""},{"path":"网络聚类分析.html","id":"自旋玻璃算法","chapter":"5 网络聚类分析","heading":"5.7 自旋玻璃算法","text":"","code":""},{"path":"网络聚类分析.html","id":"特征向量算法","chapter":"5 网络聚类分析","heading":"5.8 特征向量算法","text":"","code":""},{"path":"网络分析的可靠性分析.html","id":"网络分析的可靠性分析","chapter":"6 网络分析的可靠性分析","heading":"6 网络分析的可靠性分析","text":"","code":""},{"path":"网络分析的可靠性分析.html","id":"网络估计的准确性","chapter":"6 网络分析的可靠性分析","heading":"6.1 网络估计的准确性","text":"","code":""},{"path":"网络分析的可靠性分析.html","id":"中心性指标的稳定性","chapter":"6 网络分析的可靠性分析","heading":"6.2 中心性指标的稳定性","text":"","code":""},{"path":"网络分析的可靠性分析.html","id":"基于bootstrap的可靠性分析","chapter":"6 网络分析的可靠性分析","heading":"6.3 基于bootstrap的可靠性分析","text":"","code":""}]
